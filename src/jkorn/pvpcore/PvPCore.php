<?php

declare(strict_types=1);

namespace jkorn\pvpcore;

/**
 * Created by PhpStorm.
 * User: jkorn2324
 * Date: 2019-04-04
 * Time: 16:01
 */

use jkorn\pvpcore\commands\PvPCommand;
use pocketmine\command\Command;
use pocketmine\command\CommandSender;
use pocketmine\plugin\PluginBase;
use jkorn\pvpcore\world\WorldHandler;
use pocketmine\Server;

class PvPCore extends PluginBase
{

    private static $instance;

    private static $worldHandler;

    /**
     *
     */
    public function onEnable()
    {
        parent::onEnable();
        self::$instance = $this;
        $this->initCommands();
        self::$worldHandler = new WorldHandler();
        self::getServer()->getPluginManager()->registerEvents(new PvPCoreListener($this), $this);
    }

    /**
     * @return PvPCore
     */
    public static function getInstance() : PvPCore {
        return self::$instance;
    }

    /**
     * @return WorldHandler
     */
    public static function getWorldHandler() : WorldHandler {
        return self::$worldHandler;
    }

    /**
     *
     */
    public function onDisable()
    {
        parent::onDisable(); // TODO: Change the autogenerated stub
    }

    /**
     * @param string $s
     * @param bool $isInteger
     * @return bool
     */
    public static function canParse($s, bool $isInteger) : bool {

        $canParse = true;

        if(is_string($s)) {
            $abc = "ABCDEFGHIJKLMNOPQRZTUVWXYZ";
            $invalid = $abc . strtoupper($abc) . "!@#$%^&*()_+={}[]|:;\"',<>?/";
            if ($isInteger) $invalid = $invalid . ".";
            for ($i = 0; $i < strlen($invalid); $i++) {
                $character = $invalid[$i] . "";
                if (strpos($s, $character) === true) {
                    $canParse = false;
                    break;
                }
            }
        } else {
            if($isInteger){
                $canParse = is_int($s);
            } else {
                $canParse = is_float($s);
            }
        }

        return $canParse;
    }

    /**
     * @param string $name
     * @param Command $command
     */
    public function registerCommand(string $name, Command $command){
        Server::getInstance()->getCommandMap()->register($name, $command);
    }

    /**
     *
     */
    private function initCommands(){
        $this->registerCommand("pvp", new PvPCommand());
    }

    /**
     * @param CommandSender $sender
     * @param Command $command
     * @param string $label
     * @param array $args
     * @return bool
     */
    public function onCommand(CommandSender $sender, Command $command, string $label, array $args): bool
    {
        return parent::onCommand($sender, $command, $label, $args); // TODO: Change the autogenerated stub
    }

}